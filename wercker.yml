box: golang

launch-build:
  steps:
    - script:
        name: Commit hash of change being built
        code: git rev-parse HEAD    

    - script:
        name: Commit detail
        code: git show
      
development-build:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/mevansam/cf-copy-plugin

    - script:
        name: Set VAR
        code: export TEST_VAR="Hello WORLD!"     

    - script:
        name: Get govendor
        code: |
          go get -u github.com/kardianos/govendor

    - script:
        name: Synchronize vendored dependencies
        code: |
          govendor sync

    - script:
        name: Build
        code: |
          go build ./...

    - script:
        name: Run unit tests
        code: |
          govendor test +local

    - script:
        name: Show VAR
        code: echo $TEST_VAR

release-build:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/mevansam/cf-copy-plugin

    - add-ssh-key:
        keyname: GIT_RELEASE_KEY
        host: github.com

    - script:
        name: Check if TAG is set
        code: |
          set -x
          git show-ref --tags
          git tag -l --points-at HEAD | grep "^[0-9]*\.[0-9]*\.[0-9]*$" 2>&1 > /dev/null
          if [[ $? -eq 1 ]]; then
            echo "Changes made to branch 'master' does not have an associated tag. Build will not proceed."
            exit 1
          fi

    - script:
        name: Get govendor
        code: |
          go get -u github.com/kardianos/govendor

    - script:
        name: Synchronize vendored dependencies
        code: |
          govendor sync

    - script:
        name: Run unit tests
        code: |
          govendor test +local

    - script:
        name: Build all
        code: |
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.name "$GIT_USER_NAME"
          git config --global push.default simple
          ./build-all.sh release

integration-test:
  steps:
    - script:
        name: Echo done
        code: |
          echo "INTEGRATION TESTS SUCCESSFUL!!!"

deploy:
  steps:
    - script:
        name: Echo done
        code: |
          echo "DEPLOY DONE!!!"