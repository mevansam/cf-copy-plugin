box: golang

launch-build:
  steps:
    - script:
        name: Commit hash of change being built
        code: git rev-parse HEAD    

    - script:
        name: Commit detail
        code: git show
      
development-build:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/mevansam/cf-copy-plugin

    - script:
        name: Get govendor
        code: |
          go get -u github.com/kardianos/govendor

    - script:
        name: Synchronize vendored dependencies
        code: |
          govendor sync

    - script:
        name: Build
        code: |
          go build ./...

    - script:
        name: Run unit tests
        code: |
          govendor test -v +local

release-build:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/mevansam/cf-copy-plugin

    - wercker/add-to-known_hosts:
        hostname: github.com

    - script:
        name: Install release tools
        code: |
          sudo apt-get update
          sudo apt-get install -y zip bzip2

          pushd /tmp
          set -x

          wget https://github.com/aktau/github-release/releases/download/v0.6.2/linux-amd64-github-release.tar.bz2 \
            -O linux-amd64-github-release.tar.bz2

          bunzip2 linux-amd64-github-release.tar.bz2
          tar -xvf linux-amd64-github-release.tar
          mv bin/linux/amd64/github-release /usr/local/bin/

          set +x
          popd

    - add-ssh-key:
        keyname: GIT_RELEASE_KEY
        host: github.com

    - script:
        name: Build & publish release
        code: |
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.name "$GIT_USER_NAME"
          git config --global push.default simple

          set -x

          TAG_AT_COMMIT=$(git show-ref --tags -d | grep $WERCKER_GIT_COMMIT | sed 's|.* refs/tags/\([0-9]*\.[0-9]*\.[0-9]*\).*|\1|')
          if [[ -n $TAG_AT_COMMIT ]]; then

            set +e
            git tag -n1 -l $TAG_AT_COMMIT | grep "CF copy plugin release $TAG_AT_COMMIT" 2>&1 > /dev/null
            if [[ $? -eq 0 ]]; then
              set -e
              ./build-all.sh release
            else
              set -e
              echo "No new tag for release build was detected."
            fi
          fi

          set +x

integration-test:
  steps:
    - script:
        name: Echo done
        code: |
          LAST_TAG=$(git describe --abbrev=0 --tags)

          set +e
          # Run integration test if commit was for release files. 
          git log --format=%B -n 1 $WERCKER_GIT_COMMIT | grep "CF copy plugin binary releases for $LAST_TAG" 2>&1 > /dev/null
          if [[ $? -eq 0 ]]; then
            echo "INTEGRATION TESTS SUCCESSFUL!!!"
          else
            echo "Last commit was not for release binaries."
          fi
          set -e

deploy:
  steps:
    - script:
        name: Echo done
        code: |
          LAST_TAG=$(git describe --abbrev=0 --tags)

          set +e
          # Run deployment if commit was for release files. 
          git log --format=%B -n 1 $WERCKER_GIT_COMMIT | grep "CF copy plugin binary releases for $LAST_TAG" 2>&1 > /dev/null
          if [[ $? -eq 0 ]]; then
            echo "DEPLOY DONE!!!"
          else
            echo "Last commit was not for release binaries."
          fi
          set -e